{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"about/","title":"Welcome","text":""},{"location":"about/#background","title":"Background","text":"<p>My name is Alexander Unterrainer and I am a financial engineer specialised in KDB/Q development. After graduating from a technical high school for programmers in 2006 (Facebook only started to become popular in Europe and the internet looked very different back then) I decided to not persuade a bachelor degree and applied randomly at job openings. By pure coincidence I ended up working as an assistant portfolio manager in a small, private investment bank in Bolzano (South Tyrol, Italy). I immediately fell in love with the stock market and the financial markets. After 3 years of full-time employment witnessing the financial crisis of 2008 and all its implications I decided to go back to school and obtain a Bachelor in Ecomincs and Mangement from the Free University of Bolzano. During my second year I came across an article about \"The machines are taking over Wall Street\" in the Economist and that's when I realised how the field of computational finance and algorithmic trading combines my passion for finance with my passion for technology. After graduating from the Free University of Bolzano I decided to expand my knowledge of computational finance and started a Master in High Frequency Finance and Trading at the University of Essex in Colchester, United Kingdom. I concluded my studies with a Master in Financial Systems Engineeing at the University College of London in 2015.  </p>"},{"location":"about/#professional-career","title":"Professional Career","text":"<p>After completing university I started working as a technology analyst for Citigroup in Canary Wharf. I was part of the technology graduate program that lasted 2 years. The graduate program consits of 11 weeks class-room style training followed by two rotations, lasting 9 months each. While the first rotation is assigned randomly and I ended up in a C# team working on asset backed securities, the second rotation is more like an interview process with the teams of interest. I already came across KDB/Q before joining Citigroup, my former flat mate of that time worked with KDB/Q and so he introduced me to this \"obscure\" language and its strength in the financial industry. After this introduction I was curious and started to read more about KDB/Q starting with the obvious code.kx.com. After reading Q for Mortals the natural progression was to join the KDB/Q team at Citigroup for my second rotation. This is where my professional career as KDB/Q developer started. </p> <p>Throughout my career I have worked for several investment banks such as Citigroup, Morgan Stanley or UBS and I currently work in the FX KDB team at HSBC. I have worked across different asset classes such as equities and FX and have a good understanding of the different financial products (stocks, currencies) as well as their derivatives (options, futures, forwards, swaps). I have a deep understanding of the tick-architecture and how to store market data, providing advanced APIs and data access to end users such as quants, traders and reserachers. </p>"},{"location":"cv/","title":"Alexander Unterrainer","text":"<p>KDB/Q developer with a deep understanding of KDB-tick architecture and how to store market data, focused on providing advanced APIs for data analytics, manipulation and access to end users.</p> <p> unterrainer.alexander@gmail.com  +44 (0) 7463 242052  Alexander Unterrainer</p>"},{"location":"cv/#working-experience","title":"Working Experience","text":""},{"location":"cv/#hsbc-gfx-kdbq-developer-vice-president-feb-2020-present","title":"HSBC - GFX KDB/Q Developer, Vice President (Feb 2020 - present)","text":"<p>KDB/q developer working on the GFX platforms helping to design, build and run applications in the foreign exchange space as well as maintain and improve existing services. Main developer of a real time hitratio application to analyse how many RFQs (request for quotes) resulted in a trade. Developed a real time CEP that publishes data to an RDB. Reduced overnight job that took 60+ minutes to run into real time application. Integration of the data into an API that allowed the business to query the data and enhance it with additional information. Close collaboration with quants, quant devs and surveillance team members.</p>"},{"location":"cv/#technical-skillskdbq-bash-python","title":"Technical Skills:KDB/Q, bash, python","text":""},{"location":"cv/#asset-class-fx-ndf-futures-forwards-swaps","title":"Asset Class: FX, NDF, Futures, Forwards, Swaps","text":""},{"location":"cv/#ubs-quantitative-developer-specialised-in-kdbq-contracting-dec-2018-dec-2019","title":"UBS - Quantitative developer specialised in KDB/q - Contracting (Dec 2018 - Dec 2019)","text":"<p>Quantitative developer specialised in kdb/q and cash equities derivatives. Working on tick data from market data providers such as Thomson Reuters and Bloomberg (both intraday as well as historical big data). Onboarding new data sets (new instruments) and integrating them into the current available APIs. Creating new APIs for end users. Close collaboration with Strats, Quants and Sales to backtest strategies for client trades.</p>"},{"location":"cv/#technical-skills-kdbq-bash","title":"Technical Skills: KDB/Q, bash","text":""},{"location":"cv/#asset-class-equities-options-futures-forwards","title":"Asset Class: Equities, Options, Futures, Forwards","text":""},{"location":"cv/#morgan-stanley-kdbq-developer-for-quantitative-structured-products-associate-sep-2017-dec-2019","title":"Morgan Stanley - KDB/q developer for Quantitative Structured Products - Associate (Sep 2017 - Dec 2019)","text":"<p>Responsible for building and maintaining first class automated trading systems, servicing key stakeholders in the Equity and Derivatives Business Areas such as Quants, Strats and Traders. Improving stability and scalability of the tick plant and associated access points/APIs, enhance the current design and add new features requested by the business. Working closely with the business to design and build q queries to achieve analytics objectives.</p>"},{"location":"cv/#technical-skills-kdbq-bash_1","title":"Technical Skills: KDB/Q, bash","text":""},{"location":"cv/#asset-class-equities-options","title":"Asset Class: Equities, Options","text":""},{"location":"cv/#citi-technology-analyst-2nd-rotation-kdbq-developer-sep-2016-sep-2017","title":"Citi - Technology Analyst 2nd Rotation - KDB/Q developer (Sep 2016 - Sep 2017)","text":"<p>Worked on data and analytics services in KDB+/q, providing real time and historical statistics on orders, executions, transaction costs, and market data to the Electronic Execution, Cash, and Program Trading Desk.</p>"},{"location":"cv/#personal-achievement","title":"Personal Achievement:","text":"<p>Took ownership of a new greenfield project called QPB (Quantitative Prime Brokerage) running in three regions APAC, NAM, EMEA. Responsible for whole software life cycle including server setup, development, testing, release etc. Coordination of several teams in different regions.</p>"},{"location":"cv/#technical-skills-kdbq-bash_2","title":"Technical Skills: KDB/Q, bash","text":""},{"location":"cv/#asset-class-equities-options-futures-forwards_1","title":"Asset Class: Equities, Options, Futures, Forwards","text":""},{"location":"cv/#citi-technology-analyst-1st-rotation-global-securitized-markets-sep-2015-sep-2016","title":"Citi - Technology Analyst 1st Rotation -  Global Securitized Markets (Sep 2015 - Sep 2016)","text":"<p>As a technology graduate in Citi Centric Securitized Markets (CCSM) I was working on a new trading application for asset backed securities for the EMEA traders. This greenfield project includes development of both front and back end as well as database design and implementation.</p>"},{"location":"cv/#technical-skills-c-html-css-angular-ssis-ssrs-sql","title":"Technical SKills: C#, HTML, CSS, Angular, SSIS, SSRS, SQL","text":""},{"location":"cv/#asset-class-goverment-bonds-municipal-bonds-residential-bonds-asset-backet-securities-fixed-income","title":"Asset Class: Goverment Bonds, Municipal Bonds, Residential Bonds, Asset Backet Securities, Fixed Income","text":""},{"location":"cv/#education","title":"Education","text":""},{"location":"cv/#university-college-london-ucl-united-kingdom-london-msc-in-financial-systems-engineering-gpa-75100-distinction-deans-list-sep-2014-sep-2015","title":"University College London UCL (United Kingdom, London) - MSc in Financial Systems Engineering - GPA: 75/100 - Distinction - Dean's List (Sep 2014 - Sep 2015)","text":"<p>Compulsory modules: Requirements Engineering and Software Architecture, Software Abstractions and Systems Integration, Validation and Verification, Tools &amp; Environments, Financial Institutions and Markets, Financial Information Systems, Compliance, Risk and Regulation, Professional Practice</p>"},{"location":"cv/#awards-deans-list-commends-outstanding-academic-performance-equivalent-to-the-top-5-of-student-achievement","title":"Awards: Dean's List, commends outstanding academic performance, equivalent to the top 5% of student achievement","text":""},{"location":"cv/#university-of-essex-united-kingdom-colchester-msc-in-high-frequency-finance-and-trading-gpa-87-distinction-sep-2013-aug-2014","title":"University of Essex (United Kingdom, Colchester) - MSc in High Frequency Finance and Trading - GPA: 87 - Distinction - (Sep 2013 - Aug 2014)","text":"<p>Compulsory modules: Agent-Based Modelling in Finance and Economics, High Frequency Finance and Empirical Market Microstructure, Programming Java, Quantitative Methods in Finance and Trading, Big Data for Computational Finance, Trading Global Financial Markets, Financial Market Analysis, Professional Practice and Research Methodology Master dissertation: An electronic central limit order book for crypto currency pairs supervised by Dr. Steve Phelps. Purpose: Create a basic framework for a crypto currency exchange where different crypto currencies can be exchanged against each other. The order book was completely build in Java.</p>"},{"location":"cv/#free-university-of-bolzano-italy-bolzano-bsc-in-economics-and-management-gpa-104110-sep-2008-oct-2012","title":"Free University of Bolzano (Italy, Bolzano) - BSc in Economics and Management - GPA: 104/110 (Sep 2008 - Oct 2012)","text":"<p>Main modules: Economics, Management, Financial Mathematics, Statistics, Financial Markets and Institutions, Interest Rates Derivatives, Financial Risk Management, Advanced Computer Skills, Corporate Finance. Bachelor Degree Thesis: \"Algorithmic Trading - An Overview\"  supervised by Prof. Alex Weissensteiner and Prof. Paolo Coletti. Purpose: Introduce the reader to Algorithmic Trading and propose a new algorithm, developed by the author Skills: The ability to work hard and perform under pressure; the ability to absorb and critically assess vast amounts of information in a competitive setting. Effective and efficient time management to allow working experience alongside prolonged university hours</p>"},{"location":"cv/#skills-matrix","title":"Skills Matrix","text":"Area Beginner Intermediate Advanced Expert Languages k,shakti python,java,bash, Matlab, VBA kdb/q Architecture KDB Tick Business Knowledge Time Series FX, Quantitative Finance, Options Equities, Tick data Other Confluence, git, JIRA, Bloomberg, Thomson Reuters"},{"location":"cv/#personal-details","title":"Personal Details","text":""},{"location":"cv/#languages","title":"Languages","text":""},{"location":"cv/#english-german-italian","title":"English, German, Italian","text":""},{"location":"cv/#passports","title":"Passports","text":""},{"location":"cv/#italian-british","title":"Italian, British","text":""},{"location":"cv/#driving-licence","title":"Driving Licence","text":""},{"location":"cv/#b","title":"B","text":""},{"location":"cv/#interests","title":"Interests","text":""},{"location":"cv/#finance-quantitative-finance-financial-markets-code-golf-fitness-gym-weight-lifting-martial-arts-muay-thai-brazilian-jiu-jitsu-dancing-salsa-music-edm-classic-rock-jazz-djing-pioneer-ddj-400","title":"Finance, Quantitative Finance, Financial Markets, Code golf, Fitness (GYM, weight lifting), Martial Arts (Muay Thai, Brazilian Jiu-Jitsu), Dancing (Salsa), Music (EDM, Classic, Rock, Jazz), Djing (Pioneer DDJ 400)","text":""},{"location":"home/","title":"Welcome to DefconQ","text":""},{"location":"services/","title":"Services","text":"<p>I offer the following services</p> <ul> <li>Interview preparation</li> </ul> <p>Throughout the years I interviewed with several investment banks, hedge funds or other financial institutions. I can help you to prepare for you next role.</p> <ul> <li>CV reviews</li> </ul> <p>The business card of a developer is its CV. The first impression can make or break a deal. Let me help you to get past the CV screening and tailor your CV for the job you apply.</p> <ul> <li>Architecture review</li> </ul> <p>My extensive experience </p> <ul> <li>kdb/q development</li> </ul>"},{"location":"underConstruction/","title":"Under Construction","text":"<p>This site is currently under construction. For more information or questions please reach out to  unterrainer.alexander@gmail.com</p>"},{"location":"architecture/plain/","title":"Plain vanilla KDB-tick architecture","text":"<p>The core components of every KDB-tick architecture consist of the following 3 components:  - a Ticker Plant (TP) - a real-time Database (RDB) - a historical Database (RDB)</p> <p>In a plain vanilla KDB-tick setup you would generally also find a Feedhandler (FH) who receives data from a Data Feed. The below image illustrates the plain vanilla KDB-tick architecture. The follwoing section describes each component in more detail.</p> <p></p>"},{"location":"architecture/plain/#data-feed","title":"Data Feed","text":"<p>The data feed (upstream) provides our application with real time data. This can be an exchange, a (financial) data provider such as Bloomberg or Thomson Reuters or an internal data procider (banks or other financial institutions often have their own internal data providers). Time granularity can range from seconds, to milli seconds to even nano seconds. We can caputre pretty much any data we are interested in including financial data such as equties, currencies, commodities, crypto currencies data but also non financial data such as data coming from sensors or IOT devices (Internet of Things). </p>"},{"location":"architecture/plain/#feedhandler-fh","title":"Feedhandler (FH)","text":"<p>The feedhandler is the intersection between the data feed and the tickerplant. It captures the data from the data feed and sends it to the tickerplany. The feedhandler is generally written in a low latency programming language such as Java or C++ but can also be written in KDB/Q. In order to avoid any latency the feedhandler sends all data asynchronously to the tickerplant.</p>"},{"location":"architecture/plain/#ticker-plant-tp","title":"Ticker Plant (TP)","text":"<p>The tickerplant is the most important component in the tick architecture and should UNDER NO CIRCUMSTANCES crash or die. For that specific reason a tickerplant should always be designed as lightweight as possible and only be in charge of two tasks: - log all incoming tick data to a TP LOG file - forward all incoming tick data to its real time subscribers</p> <p>The tickerplant can operate in two different modes: 1. the batch mode, the tickerplant will batch incoming data and send it every X-seconds to all its real timer subscribers. 2. the real-time or tick mode, the tickerplant will send all incoming messages straight through to all its real timer subscribers. </p> <p>In order to avoid any latency or an output queue memory build up on the tickerplant side, the tickerplant sends all messages asynchronously to the real time subscribers. When starting up the tickerplant will load the schmea of the defined tables for the data we want to capture and verify that each table has a time and symbol column. Given that we store data in cronological order it's necessary that each table has a time column defined. Moreover, the sym column specifies the identifier of the data we capture. The tickerplant also applies the group attribute to the sym column of every table. Given that we only store data for a short period of time in the tickerplant this is not necessarily necessary, however, given that the real time subscribers such as the RDB receive the table schemas (with all their attributes) from the tickerplant when subscribing to it we need the group attribute.</p>"},{"location":"architecture/plain/#real-time-subscribers","title":"Real-time subscribers","text":"<p>The KDB-tick architecture can have several different real time subscribers. The most common among them is the real-time database (RDB) which stores all intraday data in memory. Other examples could be a CEP (Complex Event Processing Engine), CTPs (Chained tickerplants) or any other real time subscriber that is intrested in the data.</p>"},{"location":"architecture/plain/#real-time-database-rdb","title":"Real-time Database (RDB)","text":"<p>The real-time database (RDB) is the most common among all real-time subscribers and stores intraday data. A typical example would be equities or foreign exchange data between the business hours of the specific asset class. In simple terms, the RDB is a KDB/Q process that contains all intraday data in memory which makes data access much faster than querying data from disk. </p>"},{"location":"architecture/plain/#others","title":"Others","text":""},{"location":"architecture/plain/#historical-database","title":"Historical Database","text":""},{"location":"architecture/plain/#entry-point","title":"Entry point","text":""}]}